---
import BaseLayout from '../layouts/BaseLayout.astro';
import { Navigation } from '../components/Navigation';
import { FooterExpanded } from '../components/homepage/FooterExpanded';

// Mock hospital data matching the Next.js version
const mockHospitals = [
  {
    id: "1",
    name: "UCSF Medical Center",
    slug: "ucsf-medical-center",
    city: "San Francisco",
    state: "CA",
    zip: "94143",
    address: "505 Parnassus Ave, San Francisco, CA 94143",
    phone: "(415) 476-1000",
    website: "https://www.ucsfhealth.org",
    transparencyScore: 95,
    avgCost: 8500,
    totalProcedures: 12000,
    topProcedures: ["Heart Surgery", "Cancer Treatment", "Emergency Care", "Orthopedics"],
    network: ["Blue Cross", "Aetna", "Kaiser"],
    specialties: ["Cardiology", "Oncology", "Neurosurgery", "Transplant"],
    featured: true,
    rating: 4.8
  },
  {
    id: "2",
    name: "Cedars-Sinai Medical Center",
    slug: "cedars-sinai-medical-center",
    city: "Los Angeles",
    state: "CA",
    zip: "90048",
    address: "8700 Beverly Blvd, Los Angeles, CA 90048",
    phone: "(310) 423-3277",
    website: "https://www.cedars-sinai.org",
    transparencyScore: 92,
    avgCost: 9200,
    totalProcedures: 15000,
    topProcedures: ["Cardiology", "Neurosurgery", "Gastroenterology", "Oncology"],
    network: ["Blue Cross", "UnitedHealth", "Cigna"],
    specialties: ["Cardiology", "Neurosurgery", "Gastroenterology", "Emergency Medicine"],
    featured: true,
    rating: 4.7
  },
  {
    id: "3",
    name: "Stanford Health Care",
    slug: "stanford-health-care",
    city: "Palo Alto",
    state: "CA",
    zip: "94304",
    address: "300 Pasteur Dr, Stanford, CA 94305",
    phone: "(650) 723-4000",
    website: "https://stanfordhealthcare.org",
    transparencyScore: 88,
    avgCost: 7800,
    totalProcedures: 10000,
    topProcedures: ["Transplant Surgery", "Pediatrics", "Women's Health", "Radiology"],
    network: ["Aetna", "Kaiser", "Humana"],
    specialties: ["Transplant Surgery", "Pediatrics", "Women's Health", "Advanced Imaging"],
    featured: true,
    rating: 4.6
  },
  {
    id: "4",
    name: "UCLA Medical Center",
    slug: "ucla-medical-center",
    city: "Los Angeles",
    state: "CA",
    zip: "90095",
    address: "757 Westwood Plaza, Los Angeles, CA 90095",
    phone: "(310) 825-9111",
    website: "https://www.uclahealth.org",
    transparencyScore: 90,
    avgCost: 8200,
    totalProcedures: 11500,
    topProcedures: ["Neurology", "Oncology", "Emergency Care", "Orthopedics"],
    network: ["Blue Cross", "Aetna", "UnitedHealth"],
    specialties: ["Neurology", "Oncology", "Emergency Medicine", "Orthopedics"],
    featured: false,
    rating: 4.5
  },
  {
    id: "5",
    name: "Kaiser Permanente San Francisco",
    slug: "kaiser-permanente-san-francisco",
    city: "San Francisco",
    state: "CA",
    zip: "94115",
    address: "2425 Geary Blvd, San Francisco, CA 94115",
    phone: "(415) 833-2000",
    website: "https://healthy.kaiserpermanente.org",
    transparencyScore: 85,
    avgCost: 6800,
    totalProcedures: 9000,
    topProcedures: ["Primary Care", "Preventive Medicine", "Emergency Care", "Surgery"],
    network: ["Kaiser Permanente"],
    specialties: ["Primary Care", "Preventive Medicine", "Emergency Medicine"],
    featured: false,
    rating: 4.3
  },
  {
    id: "6",
    name: "Sutter Health California Pacific",
    slug: "sutter-health-california-pacific",
    city: "San Francisco",
    state: "CA",
    zip: "94115",
    address: "2333 Buchanan St, San Francisco, CA 94115",
    phone: "(415) 600-6000",
    website: "https://www.sutterhealth.org",
    transparencyScore: 83,
    avgCost: 7500,
    totalProcedures: 8500,
    topProcedures: ["Cardiology", "Orthopedics", "Women's Health", "Emergency Care"],
    network: ["Blue Cross", "Aetna", "Cigna"],
    specialties: ["Cardiology", "Orthopedics", "Women's Health"],
    featured: false,
    rating: 4.4
  }
];

const states = ["CA"];
const cities = ["San Francisco", "Los Angeles", "Palo Alto"];
const totalCount = mockHospitals.length;
const featuredHospitals = mockHospitals.filter(h => h.featured);
---

<BaseLayout title="Hospital Directory - Find & Compare Hospitals | HealthFees.org">
  <div class="min-h-screen bg-gray-50">
    <Navigation client:load />

    <!-- Hero Section -->
    <div class="bg-white border-b">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center max-w-3xl mx-auto">
          <div class="flex items-center justify-center gap-2 mb-4">
            <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
            </svg>
            <h1 class="text-4xl font-bold text-gray-900">Hospital Directory</h1>
          </div>
          <p class="text-xl text-gray-600 mb-8">
            Find hospitals by name, location, or rating. Compare costs and transparency across {totalCount.toLocaleString()} healthcare facilities.
          </p>

          <!-- Search Bar -->
          <div class="relative max-w-2xl mx-auto">
            <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m21 21-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            <input
              type="text"
              placeholder="Search by hospital name or location..."
              class="w-full pl-10 pr-4 py-3 text-lg border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              id="hospitalSearch"
            />
          </div>
        </div>
      </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Featured Hospitals -->
      {featuredHospitals.length > 0 && (
        <div class="mb-12">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Featured Hospitals</h2>
          <div class="grid md:grid-cols-3 gap-6">
            {featuredHospitals.map((hospital) => (
              <a href={`/hospital/${hospital.slug}`} class="block">
                <div class="bg-white rounded-lg shadow-sm border hover:shadow-lg transition-shadow cursor-pointer p-6">
                  <div class="flex items-start justify-between mb-3">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      Featured
                    </span>
                    <div class="text-lg font-semibold text-blue-600">
                      {hospital.transparencyScore}/100
                    </div>
                  </div>
                  <h3 class="text-lg font-semibold text-gray-900 mb-2">
                    {hospital.name}
                  </h3>
                  <div class="text-sm text-gray-600 mb-3">
                    <div class="flex items-center gap-1">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      </svg>
                      {hospital.city}, {hospital.state}
                    </div>
                  </div>
                  <div class="text-sm text-gray-800">
                    Avg Cost: ${hospital.avgCost.toLocaleString()}
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}

      <!-- Filters -->
      <div class="bg-white rounded-lg shadow-sm border p-6 mb-8">
        <div class="flex items-center gap-4 mb-4">
          <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.207A1 1 0 013 6.5V4z"></path>
          </svg>
          <h2 class="text-lg font-semibold text-gray-900">Filter Results</h2>
        </div>
        <div class="grid md:grid-cols-4 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">State</label>
            <select class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent" id="stateFilter">
              <option value="">All states</option>
              {states.map((state) => (
                <option value={state}>{state}</option>
              ))}
            </select>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">City</label>
            <select class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent" id="cityFilter">
              <option value="">All cities</option>
              {cities.map((city) => (
                <option value={city}>{city}</option>
              ))}
            </select>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Sort by</label>
            <select class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent" id="sortFilter">
              <option value="name">Name</option>
              <option value="transparency">Transparency Score</option>
              <option value="cost">Average Cost</option>
              <option value="procedures">Total Procedures</option>
            </select>
          </div>

          <div class="flex items-end">
            <button
              class="w-full px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors"
              id="resetFilters"
            >
              Reset Filters
            </button>
          </div>
        </div>
      </div>

      <!-- Results -->
      <div class="bg-white rounded-lg shadow-sm border">
        <div class="px-6 py-4 border-b">
          <h3 class="text-lg font-semibold text-gray-900" id="resultsCount">
            {mockHospitals.length} Hospitals Found
          </h3>
        </div>

        <div class="divide-y" id="hospitalsList">
          {mockHospitals.map((hospital) => (
            <a href={`/hospital/${hospital.slug}`} class="block">
              <div class="p-6 hover:bg-gray-50 transition-colors cursor-pointer">
                <div class="flex items-start justify-between">
                  <div class="flex-1">
                    <h4 class="text-lg font-semibold text-blue-600 hover:text-blue-800">
                      {hospital.name}
                    </h4>
                    <div class="flex items-center gap-4 mt-2 text-sm text-gray-600">
                      <div class="flex items-center gap-1">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        {hospital.address}
                      </div>
                      <div class="flex items-center gap-1">
                        <svg class="w-4 h-4 text-yellow-500" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                        </svg>
                        {hospital.transparencyScore}/100 Transparency
                      </div>
                      <div class="flex items-center gap-1">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                        </svg>
                        ${hospital.avgCost.toLocaleString()} Avg Cost
                      </div>
                    </div>

                    <div class="mt-3">
                      <div class="text-sm text-gray-600 mb-2">Top Procedures:</div>
                      <div class="flex flex-wrap gap-2">
                        {hospital.topProcedures.slice(0, 4).map((procedure) => (
                          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                            {procedure}
                          </span>
                        ))}
                        {hospital.topProcedures.length > 4 && (
                          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                            +{hospital.topProcedures.length - 4} more
                          </span>
                        )}
                      </div>
                    </div>

                    {hospital.network.length > 0 && (
                      <div class="mt-3">
                        <div class="text-sm text-gray-600 mb-1">In-Network With:</div>
                        <div class="text-sm text-gray-800">
                          {hospital.network.slice(0, 3).join(", ")}
                          {hospital.network.length > 3 && ` +${hospital.network.length - 3} more`}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>

      <!-- Bottom CTA -->
      <div class="mt-12 text-center">
        <div class="bg-blue-50 rounded-lg p-8">
          <h3 class="text-xl font-semibold text-gray-900 mb-4">
            Can't find what you're looking for?
          </h3>
          <p class="text-gray-600 mb-6">
            Try our advanced search tools or explore by procedure and location.
          </p>
          <div class="flex flex-wrap justify-center gap-4">
            <a href="/search-procedure" class="inline-flex items-center px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors">
              Search by Procedure
            </a>
            <a href="/tools/cost-calculator" class="inline-flex items-center px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors">
              Cost Calculator
            </a>
            <a href="/explore/location" class="inline-flex items-center px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors">
              Browse by Location
            </a>
          </div>
        </div>
      </div>

      <!-- Legal Compliance Section -->
      <div class="mt-12 space-y-6">
        <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm text-yellow-700">
                <strong>Medical Disclaimer:</strong> This information is for educational purposes only and should not replace professional medical advice. Always consult with healthcare providers for medical decisions.
              </p>
            </div>
          </div>
        </div>
        
        <div class="bg-gray-50 rounded-lg p-4">
          <h4 class="text-sm font-semibold text-gray-900 mb-2">Data Sources</h4>
          <ul class="text-sm text-gray-600 space-y-1">
            <li>• CMS Hospital Price Transparency Data</li>
            <li>• California Hospital Association Public Filings</li>
            <li>• Medicare Cost Reports</li>
            <li>• State Health Department Data</li>
          </ul>
          <p class="text-xs text-gray-500 mt-2">Last updated: December 15, 2024</p>
        </div>
      </div>
    </div>

    <FooterExpanded client:load />
  </div>

  <script define:vars={{ hospitals: mockHospitals }}>
    // Client-side filtering and search functionality
    let filteredHospitals = [...hospitals];

    const searchInput = document.getElementById('hospitalSearch');
    const stateFilter = document.getElementById('stateFilter');
    const cityFilter = document.getElementById('cityFilter');
    const sortFilter = document.getElementById('sortFilter');
    const resetButton = document.getElementById('resetFilters');
    const hospitalsList = document.getElementById('hospitalsList');
    const resultsCount = document.getElementById('resultsCount');

    function filterAndSortHospitals() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedState = stateFilter.value;
      const selectedCity = cityFilter.value;
      const sortBy = sortFilter.value;

      // Filter hospitals
      filteredHospitals = hospitals.filter(hospital => {
        const matchesSearch = hospital.name.toLowerCase().includes(searchTerm) ||
                            hospital.city.toLowerCase().includes(searchTerm);
        const matchesState = !selectedState || hospital.state === selectedState;
        const matchesCity = !selectedCity || hospital.city === selectedCity;
        
        return matchesSearch && matchesState && matchesCity;
      });

      // Sort hospitals
      filteredHospitals.sort((a, b) => {
        switch (sortBy) {
          case 'transparency':
            return b.transparencyScore - a.transparencyScore;
          case 'cost':
            return a.avgCost - b.avgCost;
          case 'procedures':
            return b.totalProcedures - a.totalProcedures;
          default:
            return a.name.localeCompare(b.name);
        }
      });

      updateDisplay();
    }

    function updateDisplay() {
      resultsCount.textContent = `${filteredHospitals.length} Hospitals Found`;
      
      hospitalsList.innerHTML = filteredHospitals.map(hospital => `
        <a href="/hospital/${hospital.slug}" class="block">
          <div class="p-6 hover:bg-gray-50 transition-colors cursor-pointer">
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <h4 class="text-lg font-semibold text-blue-600 hover:text-blue-800">
                  ${hospital.name}
                </h4>
                <div class="flex items-center gap-4 mt-2 text-sm text-gray-600">
                  <div class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    </svg>
                    ${hospital.address}
                  </div>
                  <div class="flex items-center gap-1">
                    <svg class="w-4 h-4 text-yellow-500" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                    </svg>
                    ${hospital.transparencyScore}/100 Transparency
                  </div>
                  <div class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                    </svg>
                    $${hospital.avgCost.toLocaleString()} Avg Cost
                  </div>
                </div>
                <div class="mt-3">
                  <div class="text-sm text-gray-600 mb-2">Top Procedures:</div>
                  <div class="flex flex-wrap gap-2">
                    ${hospital.topProcedures.slice(0, 4).map(procedure => 
                      `<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">${procedure}</span>`
                    ).join('')}
                    ${hospital.topProcedures.length > 4 ? 
                      `<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">+${hospital.topProcedures.length - 4} more</span>` : ''
                    }
                  </div>
                </div>
                ${hospital.network.length > 0 ? `
                  <div class="mt-3">
                    <div class="text-sm text-gray-600 mb-1">In-Network With:</div>
                    <div class="text-sm text-gray-800">
                      ${hospital.network.slice(0, 3).join(', ')}${hospital.network.length > 3 ? ` +${hospital.network.length - 3} more` : ''}
                    </div>
                  </div>
                ` : ''}
              </div>
            </div>
          </div>
        </a>
      `).join('');
    }

    // Event listeners
    searchInput.addEventListener('input', filterAndSortHospitals);
    stateFilter.addEventListener('change', filterAndSortHospitals);
    cityFilter.addEventListener('change', filterAndSortHospitals);
    sortFilter.addEventListener('change', filterAndSortHospitals);

    resetButton.addEventListener('click', () => {
      searchInput.value = '';
      stateFilter.value = '';
      cityFilter.value = '';
      sortFilter.value = 'name';
      filterAndSortHospitals();
    });

    // Initialize display
    updateDisplay();
  </script>
</BaseLayout>
