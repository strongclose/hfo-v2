---
import BaseLayout from '../../../layouts/BaseLayout.astro';
const { slug } = Astro.params;

// Mock truth data - in production, fetch from CMS
const truth = {
  id: "1",
  slug: slug as string,
  title: slug === "er-visits-cost-10x-more-at-same-hospital" 
    ? "ER Visits Cost 10x More at Same Hospital vs Urgent Care"
    : "Hospital Charges Vary 400% for Same Procedure in Same City",
  description: slug === "er-visits-cost-10x-more-at-same-hospital"
    ? "Emergency room visits for non-emergency conditions can cost patients 10 times more than identical care at urgent care centers, even within the same hospital system."
    : "Our analysis reveals that hospitals in the same metropolitan area charge wildly different amounts for identical procedures, with price variations reaching 400% or more.",
  metaDescription: slug === "er-visits-cost-10x-more-at-same-hospital"
    ? "Shocking analysis reveals ER visits cost 10x more than urgent care for the same treatment. See the data and learn how to save money on healthcare."
    : "Hospital pricing analysis shows 400% price variations for identical procedures in the same city. See which hospitals charge the most and least.",
  publishedDate: "2024-03-15",
  readingTime: 5,
  procedureTags: slug === "er-visits-cost-10x-more-at-same-hospital" 
    ? ["Emergency Care", "Urgent Care", "Minor Procedures"]
    : ["Surgery", "Imaging", "Laboratory Tests"],
  regionTags: ["California", "Bay Area", "Los Angeles"],
  chartVisual: `/images/insights/${slug}-chart.png`,
  sourceAttribution: "Analysis of Medicare Provider Utilization and Payment Data (CMS) and hospital chargemaster files from 50+ major hospitals.",
  relatedDataLinks: [
    "/search-procedure",
    "/explore/location",
    "/tools/cost-calculator",
    "/explore/insurance"
  ],
  showShareButtons: true,
  chartData: {
    hospitals: [
      {
        name: "UCSF Medical Center",
        city: "San Francisco",
        state: "CA",
        price: slug === "er-visits-cost-10x-more-at-same-hospital" ? 2850 : 15000,
      },
      {
        name: "Stanford Hospital",
        city: "Palo Alto", 
        state: "CA",
        price: slug === "er-visits-cost-10x-more-at-same-hospital" ? 3200 : 18500,
      },
      {
        name: "Kaiser Oakland",
        city: "Oakland",
        state: "CA", 
        price: slug === "er-visits-cost-10x-more-at-same-hospital" ? 1950 : 12000,
      },
    ],
    feeBreakdown: [
      {
        category: "Facility Fee",
        description: "Hospital overhead and facility costs",
        amount: slug === "er-visits-cost-10x-more-at-same-hospital" ? 1200 : 8000,
      },
      {
        category: "Professional Fee", 
        description: "Doctor and specialist charges",
        amount: slug === "er-visits-cost-10x-more-at-same-hospital" ? 650 : 4500,
      },
      {
        category: "Diagnostic Tests",
        description: "Lab work, imaging, and other tests",
        amount: slug === "er-visits-cost-10x-more-at-same-hospital" ? 400 : 2500,
      },
    ]
  }
};

// Mock related truths
const relatedTruths = [
  {
    id: "2",
    slug: "hospital-charges-vs-insurance-payments",
    title: "Hospital Charges vs What Insurance Actually Pays",
    description: "The shocking difference between what hospitals charge and what insurance companies actually pay reveals the complex world of healthcare pricing.",
    publishedDate: "2024-03-10",
    readingTime: 4,
  },
  {
    id: "3", 
    slug: "outpatient-surgery-costs-by-location",
    title: "Outpatient Surgery Costs: Location Makes All the Difference",
    description: "The same outpatient procedure can cost 5x more depending on where you get it done, even within the same insurance network.",
    publishedDate: "2024-03-05",
    readingTime: 6,
  },
  {
    id: "4",
    slug: "prescription-drug-markup-hospitals",
    title: "Hospital Prescription Drug Markups Reach 1000%",
    description: "Hospitals charge patients up to 10x what they pay for common medications, creating massive profit margins on essential drugs.",
    publishedDate: "2024-02-28", 
    readingTime: 5,
  },
];
---

<BaseLayout 
  title={`${truth.title} | Hospital Fees Insights`}
  description={truth.metaDescription || truth.description}
>
  <div class="min-h-screen bg-gray-50">
    <!-- Hero Section -->
    <div class="bg-white border-b">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="mb-6">
          <nav class="flex items-center space-x-2 text-sm text-gray-600">
            <a href="/insights" class="hover:text-blue-600">Insights</a>
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
            <a href="/insights/truths" class="hover:text-blue-600">Shocking Truths</a>
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
            <span class="text-gray-900">{truth.title}</span>
          </nav>
        </div>

        <div class="space-y-6">
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 leading-tight">
            {truth.title}
          </h1>

          <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600">
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
              </svg>
              {new Date(truth.publishedDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long", 
                day: "numeric",
                timeZone: "UTC",
              })}
            </div>
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              {truth.readingTime} min read
            </div>
          </div>

          <p class="text-xl text-gray-700 leading-relaxed">
            {truth.description}
          </p>

          <!-- Tags -->
          <div class="flex flex-wrap gap-2">
            {truth.procedureTags.map(tag => (
              <span key={tag} class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
                </svg>
                {tag}
              </span>
            ))}
            {truth.regionTags.map(tag => (
              <span key={tag} class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                {tag}
              </span>
            ))}
          </div>
        </div>
      </div>
    </div>

    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Main Content -->
        <div class="lg:col-span-2">
          <!-- Chart/Visual -->
          {truth.chartVisual && (
            <div class="mb-8">
              <img
                src={truth.chartVisual}
                alt={`Chart visualization for ${truth.title}`}
                class="w-full rounded-lg shadow-lg"
                style="display: none;"
                onerror="this.style.display='none'"
              />
              <!-- Fallback placeholder when image fails to load -->
              <div class="w-full h-64 bg-gray-100 rounded-lg flex items-center justify-center">
                <div class="text-center">
                  <svg class="w-12 h-12 text-gray-400 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                  </svg>
                  <p class="text-gray-500">Chart visualization</p>
                </div>
              </div>
            </div>
          )}

          <!-- Chart Data Display -->
          {truth.chartData && (
            <div class="mb-8">
              <div class="bg-white p-6 rounded-lg shadow">
                <h3 class="text-lg font-semibold mb-4 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
                  </svg>
                  Data Breakdown
                </h3>
                
                {truth.chartData.hospitals && (
                  <div class="space-y-4 mb-6">
                    <h4 class="font-medium text-gray-900">Hospital Pricing Comparison</h4>
                    {truth.chartData.hospitals.map((hospital, idx) => (
                      <div key={idx} class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div>
                          <div class="font-medium">{hospital.name}</div>
                          <div class="text-sm text-gray-600">{hospital.city}, {hospital.state}</div>
                        </div>
                        <div class="text-lg font-bold text-blue-600">
                          ${hospital.price.toLocaleString()}
                        </div>
                      </div>
                    ))}
                  </div>
                )}

                {truth.chartData.feeBreakdown && (
                  <div class="space-y-4">
                    <h4 class="font-medium text-gray-900">Fee Breakdown</h4>
                    {truth.chartData.feeBreakdown.map((fee, idx) => (
                      <div key={idx} class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div>
                          <div class="font-medium">{fee.category}</div>
                          <div class="text-sm text-gray-600">{fee.description}</div>
                        </div>
                        <div class="text-lg font-bold text-red-600">
                          ${fee.amount.toLocaleString()}
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          )}

          <!-- Source Attribution -->
          <div class="mb-8 p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <p class="text-sm text-blue-800">
              <strong>Source:</strong> {truth.sourceAttribution}
            </p>
          </div>

          <!-- Related Data Links -->
          {truth.relatedDataLinks.length > 0 && (
            <div class="mb-8">
              <h3 class="text-lg font-semibold mb-4">Explore This Data Further</h3>
              <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                {truth.relatedDataLinks.map((link, idx) => (
                  <a key={idx} href={link} class="block">
                    <div class="bg-white p-4 rounded-lg shadow hover:shadow-md transition-shadow cursor-pointer">
                      <div class="flex items-center justify-between">
                        <span class="text-sm font-medium">
                          {link.includes("search-procedure") && "Search Procedures"}
                          {link.includes("explore/location") && "Explore by Location"} 
                          {link.includes("cost-calculator") && "Cost Calculator"}
                          {link.includes("insurers") && "Insurance Directory"}
                          {link.includes("explore/insurance") && "Insurance Explorer"}
                          {link.includes("glossary") && "Healthcare Glossary"}
                          {!link.includes("search-procedure") && 
                           !link.includes("explore") && 
                           !link.includes("cost-calculator") && 
                           !link.includes("insurers") && 
                           !link.includes("glossary") && "Related Data"}
                        </span>
                        <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                        </svg>
                      </div>
                    </div>
                  </a>
                ))}
              </div>
            </div>
          )}
        </div>

        <!-- Sidebar -->
        <div class="space-y-6">
          <!-- Sticky CTAs -->
          <div class="sticky top-8 space-y-4">
            <!-- Action Buttons -->
            <div class="bg-white p-6 rounded-lg shadow">
              <h3 class="text-base font-semibold mb-4">Take Action</h3>
              <div class="space-y-3">
                <a href="/search-procedure" class="block">
                  <button class="w-full inline-flex items-center justify-start px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 0l-6-6m6 6l-6 6m6 3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    Compare This Procedure
                  </button>
                </a>
                <button class="w-full inline-flex items-center justify-start px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
                  </svg>
                  Ask AI About This
                </button>
              </div>
            </div>

            <!-- Share Buttons -->
            {truth.showShareButtons && (
              <div class="bg-white p-6 rounded-lg shadow">
                <h3 class="text-base font-semibold mb-4">Share This Insight</h3>
                <div class="space-y-3">
                  <button 
                    onclick="window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(document.title)}&url=${encodeURIComponent(window.location.href)}`, '_blank')"
                    class="w-full inline-flex items-center justify-start px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                    </svg>
                    Share on X.com
                  </button>
                  <button 
                    onclick="navigator.clipboard.writeText(window.location.href).then(() => { this.innerHTML = '<svg class=&quot;w-4 h-4 mr-2 text-green-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;><path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M5 13l4 4L19 7&quot;/></svg>Copied!'; setTimeout(() => { this.innerHTML = '<svg class=&quot;w-4 h-4 mr-2&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;><path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&quot;/></svg>Copy Link'; }, 2000); })"
                    class="w-full inline-flex items-center justify-start px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"/>
                    </svg>
                    Copy Link
                  </button>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>

      <!-- Related Truths -->
      {relatedTruths.length > 0 && (
        <div class="mt-12">
          <div class="border-t border-gray-200 mb-8"></div>
          <h2 class="text-2xl font-bold mb-6">Related Shocking Truths</h2>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            {relatedTruths.map(relatedTruth => (
              <a key={relatedTruth.id} href={`/insights/truths/${relatedTruth.slug}`} class="block">
                <div class="bg-white p-6 rounded-lg shadow hover:shadow-lg transition-shadow cursor-pointer h-full">
                  <h3 class="text-base font-semibold mb-2 line-clamp-2">{relatedTruth.title}</h3>
                  <p class="text-sm text-gray-600 line-clamp-3 mb-4">{relatedTruth.description}</p>
                  <div class="flex items-center justify-between text-xs text-gray-500">
                    <span>{relatedTruth.readingTime} min read</span>
                    <span>
                      {new Date(relatedTruth.publishedDate).toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "numeric", 
                        day: "numeric",
                        timeZone: "UTC",
                      })}
                    </span>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}
    </div>
  </div>
</BaseLayout>
