---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Navigation from '../../components/Navigation.tsx';
import FooterExpanded from '../../components/homepage/FooterExpanded.tsx';

// Mock visualizations data
const visualizations = [
  {
    id: "1",
    title: "National Healthcare Cost Trends",
    description: "Track how medical procedure costs have changed over the past 5 years",
    type: "Line Chart",
    category: "Trends",
    lastUpdated: "2024-01-15",
    featured: true,
  },
  {
    id: "2",
    title: "Regional Price Variations",
    description: "Compare average costs for common procedures across different states",
    type: "Heat Map",
    category: "Geographic",
    lastUpdated: "2024-01-10",
    featured: true,
  },
  {
    id: "3",
    title: "Insurance Market Share",
    description: "Breakdown of major insurance providers by region and member count",
    type: "Pie Chart",
    category: "Insurance",
    lastUpdated: "2024-01-08",
    featured: false,
  },
  {
    id: "4",
    title: "Hospital Transparency Scores",
    description: "Distribution of price transparency compliance across hospitals",
    type: "Bar Chart",
    category: "Compliance",
    lastUpdated: "2024-01-05",
    featured: true,
  },
  {
    id: "5",
    title: "Emergency Room vs Urgent Care Costs",
    description: "Cost comparison for similar treatments at different facility types",
    type: "Bar Chart",
    category: "Trends",
    lastUpdated: "2024-01-03",
    featured: false,
  },
  {
    id: "6",
    title: "Surgical Cost by Hospital Type",
    description: "How procedure costs vary between academic, community, and specialty hospitals",
    type: "Box Plot",
    category: "Facility",
    lastUpdated: "2024-01-01",
    featured: false,
  },
];

const featuredCharts = visualizations.filter(v => v.featured);
const categories = [...new Set(visualizations.map(v => v.category))];

// Function to get icon based on chart type
function getChartIcon(type: string) {
  switch (type) {
    case "Line Chart":
      return `<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"/>
      </svg>`;
    case "Heat Map":
      return `<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
      </svg>`;
    case "Pie Chart":
      return `<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z"/>
      </svg>`;
    case "Bar Chart":
      return `<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
      </svg>`;
    default:
      return `<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
      </svg>`;
  }
}
---

<BaseLayout 
  title="Healthcare Data Visualizations | Hospital Fees"
  description="Interactive charts and data visualizations showing healthcare cost trends, regional variations, and market insights."
>
  <div class="min-h-screen bg-gray-50">
    <Navigation client:load />

    <!-- Hero Section -->
    <div class="bg-white border-b">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center max-w-3xl mx-auto">
          <nav class="flex items-center justify-center space-x-2 text-sm text-gray-600 mb-6">
            <a href="/insights" class="hover:text-blue-600">Insights</a>
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
            <span class="text-gray-900">Data Visualizations</span>
          </nav>

          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
            Data Visualizations
          </h1>
          <p class="text-xl text-gray-600 mb-8">
            Interactive charts and graphs revealing healthcare cost patterns, trends, and market insights.
          </p>
        </div>
      </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Featured Visualizations -->
      <div class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Featured Charts</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {featuredCharts.map((chart) => (
            <div key={chart.id} class="bg-white p-6 rounded-lg shadow border hover:shadow-lg transition-shadow">
              <div class="flex items-center justify-between mb-2">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  {chart.type}
                </span>
                <div set:html={getChartIcon(chart.type)}></div>
              </div>
              <h3 class="text-lg font-semibold mb-2">{chart.title}</h3>
              <p class="text-gray-600 mb-4">{chart.description}</p>

              <div class="flex items-center justify-between">
                <div class="flex items-center gap-2 text-sm text-gray-500">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                  </svg>
                  Updated {chart.lastUpdated}
                </div>
                <div class="flex gap-2">
                  <button class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                    </svg>
                    Share
                  </button>
                  <button class="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    View Chart
                    <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"/>
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Categories -->
      <div class="mb-8">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Browse by Category</h2>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
          {categories.map((category) => (
            <div key={category} class="bg-white p-4 rounded-lg shadow border hover:shadow-md transition-shadow cursor-pointer text-center">
              <h3 class="font-medium text-gray-900">{category}</h3>
              <p class="text-sm text-gray-600 mt-1">
                {visualizations.filter(v => v.category === category).length} charts
              </p>
            </div>
          ))}
        </div>
      </div>

      <!-- All Visualizations -->
      <div class="space-y-6">
        <div class="flex items-center justify-between">
          <h2 class="text-2xl font-bold text-gray-900">All Visualizations</h2>
          <div class="flex gap-2">
            <button class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"/>
              </svg>
              Filter
            </button>
            <button class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
              </svg>
              Export
            </button>
          </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {visualizations.map((chart) => (
            <div key={chart.id} class="bg-white p-6 rounded-lg shadow border hover:shadow-lg transition-shadow">
              <div class="flex items-center justify-between mb-2">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  {chart.category}
                </span>
                <div set:html={getChartIcon(chart.type)}></div>
              </div>
              <h3 class="text-base font-semibold mb-2">{chart.title}</h3>
              <p class="text-sm text-gray-600 mb-4">{chart.description}</p>

              <div class="flex items-center justify-between">
                <span class="text-xs text-gray-500">{chart.type}</span>
                <button class="inline-flex items-center px-2 py-1 text-sm font-medium text-gray-700 hover:text-blue-600 transition-colors">
                  View
                  <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"/>
                  </svg>
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Call to Action -->
      <div class="mt-12 text-center">
        <div class="bg-blue-50 rounded-lg p-8">
          <h3 class="text-xl font-semibold text-gray-900 mb-4">
            Need custom analysis?
          </h3>
          <p class="text-gray-600 mb-6">
            Contact us for specialized data visualizations and custom reports.
          </p>
          <div class="flex flex-wrap justify-center gap-4">
            <a 
              href="/provider-feedback"
              class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Request Custom Analysis
            </a>
            <a 
              href="/insights/truths"
              class="inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Explore Insights
            </a>
          </div>
        </div>
      </div>
    </div>

    <FooterExpanded client:load />
  </div>
</BaseLayout>
